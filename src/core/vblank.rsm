; VBlank Handler --------------------------------------------------------------
core_vblank_handler:

    di
    push    af
    push    bc
    push    de
    push    hl

    ; Update palettes here so we avoid changing them midframe
    ld      a,[corePaletteBG]
    ld      [rBGP],a

    ld      a,[corePaletteSprite0]
    ld      [rOBP0],a

    ld      a,[corePaletteSprite1]
    ld      [rOBP1],a

    ; game specific code ------------------------------------------------------

    ; first load the sprite updates from the last frame
    call    $ff80 

    ; now copy the new tile data into vram so we pick up the updated sprite
    ; tiles on screen
    call    player_animation_update_tile

    ; now take care of the actual updating of the sprite data
    call    player_animation_update

    ld      a,[coreScrollX]
    ld      [rSCX],a

    ld      a,[coreScrollY]
    ld      [rSCY],a

    ; check if we need to load a new room if so set up the new entities
    ; AFTER we copy to OAM to avoid visual glitcehs
    ld      a,[mapRoomUpdateRequired]
    cp      1
    call    z,entity_load

    ; load the new room data into vram
    ld      a,[mapRoomUpdateRequired]
    cp      1
    call    z,map_load_room

    ; Set vblank flag, this will cause the core loop to run the game loop once
    ld      a,1
    ld      [coreVBlankDone],a

    ; end of game specific code -----------------------------------------------

    pop     hl
    pop     de
    pop     bc
    pop     af

    reti

