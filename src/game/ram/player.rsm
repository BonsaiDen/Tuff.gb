SECTION "PlayerRam",WRAM0[$CA00]

; Constants -------------------------------------------------------------------
PLAYER_DIRECTION_LEFT      EQU 1
PLAYER_DIRECTION_RIGHT     EQU 2

PLAYER_JUMP_LAND           EQU 2
PLAYER_JUMP_WATER          EQU 2
PLAYER_JUMP_SCREEN_BOOST   EQU 2
PLAYER_FALL_MAX            EQU 3
PLAYER_SPEED_MAX           EQU 1
PLAYER_GRAVITY_MAX         EQU 2

PLAYER_GRAVITY_INTERVAL    EQU 10

PLAYER_SLEEP_WAIT          EQU 240 ; ticks of 125ms timer = 30 seconds
PLAYER_SPRITE_INDEX        EQU 0

PLAYER_ANIMATION_IDLE      EQU 0
PLAYER_ANIMATION_WALKING   EQU 1
PLAYER_ANIMATION_SLEEP     EQU 2
PLAYER_ANIMATION_PUSHING   EQU 3
PLAYER_ANIMATION_JUMP      EQU 4
PLAYER_ANIMATION_FALL      EQU 5
PLAYER_ANIMATION_RUNNING   EQU 6
PLAYER_ANIMATION_SWIMMING  EQU 7
PLAYER_ANIMATION_DISSOLVE  EQU 8
PLAYER_ANIMATION_SURFACE   EQU 9
PLAYER_ANIMATION_SLIDE     EQU 10

PLAYER_HALF_WIDTH          EQU 7
PLAYER_HEIGHT              EQU 13

PLAYER_SLIDE_DURATION      EQU 60 ; in frames
PLAYER_SLIDE_SLOWDOWN      EQU 3 ; only apply fall speed every X other ticks while sliding


; Variables -------------------------------------------------------------------
playerX:             DB 
playerY:             DB 
playerYOffset:       DB ; y offset the player is rendered at, only visual
playerSpeedRight:    DB 
playerSpeedLeft:     DB 
playerMoveTick:      DB

playerSleepTick:     DB
playerDecTick:       DB

playerAnimation:     DB
playerAnimationLast: DB

playerDirection:     DB
playerDirectionLast: DB
playerDirLastPressed:DB
playerDirectionWall: DB

; Wall Sliding
playerWallSlideDir:  DB
playerWallSlideTick: DB

; Gravity and Jumping
playerFallSpeed:     DB ; current fall speed per frame
playerFallFrames:    DB ; number of frames the player is falling (max 255)

playerGravityTick:   DB ; ticker for applying gravity
playerJumpPressed:   DB ; whether the jump button is still continously pressed
playerOnGround:      DB ; is the player on ground
playerJumpForce:     DB ; current jump force per frame

playerInWater:       DB ; is the player in water?
playerWaterHitDone:  DB ; whether the intitial splash hit is done
playerWaterTick:     DB ; player water offset ticker
playerWaterHitDepth: DB ; value to check how deep the player should splash into the water

playerDissolveTick:  DB ; tick for when the player is dissolving

