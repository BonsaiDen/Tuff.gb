SECTION "EntityRam",WRAM0[$CBB0]

; Constants -------------------------------------------------------------------
ENTITY_PER_ROOM           EQU 4
ENTITY_BG_SPRITE_INDEX    EQU 11; start indexes to use for entity sprites that are in the background
ENTITY_FG_SPRITE_INDEX    EQU 6 ; start indexes to use for entity sprites that are in the foreground
ENTITY_SPRITE_ROWS        EQU 8 ; how many entity sprite rows are contained in the sprite map data

ENTITY_ANIMATION_OFFSET   EQU 14
ENTITY_ANIMATION_SAVE     EQU 0
ENTITY_ANIMATION_GLOW     EQU 1

; TODO needs complete rewrite for the actual lookup and saving... getting the offset needs to be reworked internally to only allocate the required data
ENTITY_STORED_STATE_SIZE  EQU MAP_WIDTH * MAP_HEIGHT * ENTITY_PER_ROOM 


; RAM storage for entity positions / states -----------------------------------
; mapStorage format is 2 bytes per entity [ddtttttt] xxxxyyyy (type, direction, x, y)
entityStoredState:      DS  ENTITY_STORED_STATE_SIZE ; [syyy yyyy] [xxxx xxxx]

entityScreenState:      DS  32 ; 8 bytes per entity 
                               ; [type][flags][direction][y] 
                               ; [x][tileslot][custom][custom]
                               ; type > 0 = entity is active

entityTileRowMap:       DS  4 ; which entity tile rows are currently mapped into vram

ENTITY_MAX_STORE_BUCKETS EQU 4
entityStoreBuckets:     DS 16 ; 4 bytes per bucket entry
                              ; [roomid] (1 based indexing)
                              ; [ffffff][ii] flags and entity id
                              ; [y position]
                              ; [x position]

