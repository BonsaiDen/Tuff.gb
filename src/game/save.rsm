SECTION "SaveLogic",ROM0

; Constants -------------------------------------------------------------------
SAVE_HEADER_SIZE    EQU 3
SAVE_VERSION_SIZE   EQU 1
SAVE_DATA_SIZE      EQU 5
SAVE_GAME_VERSION   EQU 1


; Saving / Loading ------------------------------------------------------------
save_restore_player:
    call    save_load_from_sram
    ret


save_set_player:
    call    save_store_to_sram
    ret


; SRAM Handling Routines ------------------------------------------------------
save_load_from_sram:

    ; writing $0A anywhere into the $0000-1FFFF range will enable external ram
    ld      hl,$0000 
    ld      [hl],$0A 

    ; get checksum and compare
    call    save_calculate_sum
    ld      b,a

    ld      hl,$A000 
    ld      a,[hli]
    cp      b
    jp      nz,.defaults

    ; check header
    ld      a,[hli]
    cp      $12
    jp      nz,.defaults

    ld      a,[hli]
    cp      $34
    jp      nz,.defaults

    ld      a,[hli]
    cp      $56
    jp      nz,.defaults

    ; version
    ld      a,[hli]
    cp      SAVE_GAME_VERSION
    jp      nz,.defaults

    ; ignore save state when start button is being pressed during powerup
    ld      a,[coreInput]
    and     %00001100
    cp      %00001100
    jp      z,.defaults

    ; save data
    ld      a,[hli]
    ld      [playerX],a

    ld      a,[hli]
    ld      [playerY],a

    ld      a,[hli]
    ld      [mapRoomX],a

    ld      a,[hli]
    ld      [mapRoomY],a

    ld      a,[hli]
    ld      [playerDirection],a

    jp      .load

.defaults:
    
    ld      a,24
    ld      [playerX],a

    ld      a,48
    ld      [playerY],a

    ld      a,7
    ld      [mapRoomX],a

    ld      a,2
    ld      [mapRoomY],a

.load:

    ld      a,[mapRoomX]
    ld      b,a
    ld      a,[mapRoomY]
    ld      c,a

    call    map_set_room
    call    player_reset

.end:
    ; disable external RAM
    ld      hl,$0000 
    ld      [hl],$00

    ret


save_store_to_sram:

    ; writing $0A anywhere into the $0000-1FFFF range will enable external ram
    ld      hl,$0000 
    ld      [hl],$0A 

    ld      hl,$A000 
    
    ; checksum of the save data bytes starting from $A001
    ld      a,$00
    ld      [hli],a

    ; header prefix
    ld      a,$12
    ld      [hli],a

    ld      a,$34
    ld      [hli],a

    ld      a,$56
    ld      [hli],a

    ; game version
    ld      a,SAVE_GAME_VERSION
    ld      [hli],a

    ; write the actual save data
    ld      a,[playerX]
    ld      [hli],a

    ld      a,[playerY]
    ld      [hli],a

    ld      a,[mapRoomX]
    ld      [hli],a

    ld      a,[mapRoomY]
    ld      [hli],a

    ld      a,[playerDirection]
    ld      [hli],a

    ; checksum
    call    save_calculate_sum
    ld      hl,$A000 
    ld      [hl],a

    ; disable external RAM
    ld      hl,$0000 
    ld      [hl],$00

    ret


save_calculate_sum: ; checksum byte -> a
    ; must be in external RAM mode
    ; start at $A001, exluding the checksum byte at $A000
    ld      hl,$A001
    ld      b,SAVE_HEADER_SIZE + SAVE_VERSION_SIZE + SAVE_DATA_SIZE
    ld      c,0; checksum data

.next:
    ld      a,[hli]
    xor     c
    ld      c,a
    dec     b
    ld      a,b
    cp      0
    jp      nz,.next
    
    ld      a,c
    ret

